#import dbus
#from dbus import SessionBus
import subprocess
import os

def diy_bar_show(curr_sentence):
    print(curr_sentence)

    try:
        diy_bar = SessionBus().get_object('org.kde.plasma.doityourselfbar', '/id_1').get_dbus_method('pass')
    except dbus.exceptions.DBusException:
        print("啧")
    if curr_sentence is not None and curr_sentence != "":
        diy_bar('|A|%s|||' % (curr_sentence))
    else:
        diy_bar('| A | …… |||')

def subprocess_diybar_show(curr_sentence):
    if curr_sentence is not None and curr_sentence != "":
        curr_sentence = '|A|%s|||' % (curr_sentence)
    else:
        curr_sentence = '| A | …… |||'
    subprocess.run(['qdbus', 'org.kde.plasma.doityourselfbar', '/id_1', 'pass', curr_sentence])

# when('app.live_lyric.sentence_changed', subprocess_diybar_show)


def send_lrc_song(curr_sentence):
    with open("/tmp/fuo_lrc", "w") as fp:
        if curr_sentence is not None and curr_sentence != "":
            print(curr_sentence, file=fp)
        else:
            print("……", file=fp)

#when('app.live_lyric.sentence_changed', send_lrc_song)
#import subprocess
#ubprocess.Popen(['osdlyrics'])

#config.THEME = 'auto'

def load_local_music(plugin):
    if plugin.name == 'fuo_local':
        music_path = os.path.expanduser('~') + '/Music/Music'
        config.fuo_local.MUSIC_FOLDERS = [music_path + '/' + folder for folder in os.listdir(music_path) if ~os.path.isfile(folder)]
        config.fuo_local.MUSIC_FOLDERS.append(music_path)
        config.fuo_local.MUSIC_FORMATS = ['mp3', 'ogg', 'wma', 'm4a', 'm4v', 'mp4', 'flac']

when('app.plugin_mgr.about_to_enable', load_local_music, use_symbol=True, aioqueue=False)
